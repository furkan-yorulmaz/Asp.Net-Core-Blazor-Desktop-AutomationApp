@page "/UpdateProduct"
@using BlazorAutomationApp.Shared.Components.MessageBox
@using BlazorAutomationApp.Business

<div class="form">
    <label class="content-lbl-title">Ürün</label>
    <div class="container py-4 px-5 bg-white">
        <div class="row mb-3">
            <div class="col-sm-4">
                <label class="col-form-label">Ürün Kategori</label>
            </div>
            <div class="col-sm-8">
                <select value="@product.CategoryId" @onchange="ChangeCategory" class="form-select">
                    @foreach (var item in categoryManager.List())
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-sm-4">
                <label class="col-form-label">Ürün Adı</label>
            </div>
            <div class="col-sm-8">
                <input type="text" class="form-control" @bind="@product.Name">
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-sm-4">
                <label class="col-form-label">Açıklama</label>
            </div>
            <div class="col-sm-8">
                <textarea style="resize: none;" class="form-control" rows="3" @bind="@product.Description"></textarea>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-sm-4">
                <label class="col-form-label">Fiyat</label>
            </div>
            <div class="col-sm-8">
                <input type="text" class="form-control" @bind="@product.Price">
            </div>
        </div>
        <div class="row">
            <div class="col-sm-8 offset-sm-4">
                <button class="content-btn" @onclick="@(()=>Update())">Kaydet</button>
                <button class="content-btn" @onclick="@(()=>Delete())">Sil</button>
            </div>
        </div>
    </div>
</div>

@code {
    ProductManager productManager = new ProductManager();
    CategoryManager categoryManager = new CategoryManager();

    [Parameter]
    public Product product { get; set; }
    public async override Task SetParametersAsync(ParameterView parameters)
    {
        await base.SetParametersAsync(parameters);
    }

    void ChangeCategory(ChangeEventArgs e)
    {
        product.CategoryId = Convert.ToInt32(e.Value.ToString());
    }

    [CascadingParameter]
    IModalService Modal { get; set; }
    void Update()
    {
        var result = productManager.Update(product);

        ModalParameters mparams = new ModalParameters();
        mparams.Add("title", "Ürün Ekle");
        if (result != -1)
        {
            mparams.Add("text", "Kayıt işlemi başarıyla tamamlandı.");
        }
        else
        {
            mparams.Add("text", "Kayıt Hatası. Lütfen girilen bilgileri Kontrol Edin.");
        }
        mparams.Add("buttonText", "Tamam");
        Modal.Show<MessageBoxModal>("", mparams);
    }

    void Delete()
    {
        var result = productManager.Delete(product.Id);

        ModalParameters mparams = new ModalParameters();
        mparams.Add("title", "Ürün Sil");
        if (result != -1)
        {
            mparams.Add("text", "Silme işlemi başarıyla tamamlandı.");
        }
        else
        {
            mparams.Add("text", "İşlem Hatası. Lütfen girilen bilgileri Kontrol Edin.");
        }
        mparams.Add("buttonText", "Tamam");
        Modal.Show<MessageBoxModal>("", mparams);
    }
}
